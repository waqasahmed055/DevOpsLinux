---
- name: Remove password-related lines from bash history for all users
  hosts: all
  become: yes
  become_user: root
  gather_facts: no

  vars:
    password_keywords:
      - "password"
      - "passwd"
      - "pwd"
      - "pass="
      - "--password"
      - "-p"
      - "secret"
      - "token"
      - "key="

  tasks:
    - name: Get list of users with bash shell and existing home directories
      shell: |
        getent passwd | while IFS=: read -r user x uid gid gecos home shell; do
          if [[ "$shell" == *"bash"* ]] && [[ -d "$home" ]]; then
            echo "$user:$home"
          fi
        done
      register: bash_users_result
      changed_when: false

    - name: Debug - Display found bash users
      debug:
        msg: "Found {{ bash_users_result.stdout_lines | length }} bash users: {{ bash_users_result.stdout_lines }}"

    - name: Clean bash history for each user
      block:
        - name: Check if .bash_history exists and count matching lines
          shell: |
            history_file="{{ item.split(':')[1] }}/.bash_history"
            if [ -f "$history_file" ]; then
              grep -i -E "({{ password_keywords | join('|') }})" "$history_file" || true
              echo "MATCH_COUNT=$(grep -i -E "({{ password_keywords | join('|') }})" "$history_file" | wc -l)"
            else
              echo "MATCH_COUNT=0"
              echo "File does not exist: $history_file"
            fi
          register: pre_check
          changed_when: false

        - name: Debug - Show lines before cleaning
          debug:
            msg: "Before cleaning {{ item.split(':')[1] }}/.bash_history: {{ pre_check.stdout_lines }} ({{ pre_check.stdout | regex_search('MATCH_COUNT=(\d+)', '\\1') | first }} matches)"

        - name: Remove password lines from .bash_history
          shell: |
            history_file="{{ item.split(':')[1] }}/.bash_history"
            if [ -f "$history_file" ]; then
              temp_file=$(mktemp)
              original_lines=$(wc -l < "$history_file")
              grep -v -i -E "({{ password_keywords | join('|') }})" "$history_file" > "$temp_file" || { echo "grep failed"; exit 1; }
              mv "$temp_file" "$history_file" || { echo "mv failed"; exit 1; }
              chown "{{ item.split(':')[0] }}:{{ item.split(':')[0] }}" "$history_file"
              chmod 600 "$history_file"
              new_lines=$(wc -l < "$history_file")
              removed_lines=$((original_lines - new_lines))
              echo "Removed $removed_lines lines from $history_file"
            else
              echo "No .bash_history exists at $history_file"
            fi
          register: clean_result
          when: pre_check.stdout | regex_search('MATCH_COUNT=[1-9]')

        - name: Debug - Show result of cleaning
          debug:
            msg: "{{ clean_result.stdout_lines }}"
          when: clean_result.stdout is defined

      loop: "{{ bash_users_result.stdout_lines }}"
      ignore_errors: yes  # Continue even if one user's history fails

    - name: Confirm completion
      debug:
        msg: "Bash history cleaning process completed for all users."
---
